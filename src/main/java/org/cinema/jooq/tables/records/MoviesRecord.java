/*
 * This file is generated by jOOQ.
 */
package org.cinema.jooq.tables.records;


import java.time.LocalDateTime;

import org.cinema.jooq.tables.Movies;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MoviesRecord extends UpdatableRecordImpl<MoviesRecord> implements Record9<Long, byte[], String, Integer, String, LocalDateTime, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>cinema.movies.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cinema.movies.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cinema.movies.uuid</code>.
     */
    public void setUuid(byte[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>cinema.movies.uuid</code>.
     */
    public byte[] getUuid() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>cinema.movies.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cinema.movies.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cinema.movies.duration</code>.
     */
    public void setDuration(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>cinema.movies.duration</code>.
     */
    public Integer getDuration() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>cinema.movies.author</code>.
     */
    public void setAuthor(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>cinema.movies.author</code>.
     */
    public String getAuthor() {
        return (String) get(4);
    }

    /**
     * Setter for <code>cinema.movies.release_date</code>.
     */
    public void setReleaseDate(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>cinema.movies.release_date</code>.
     */
    public LocalDateTime getReleaseDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>cinema.movies.active</code>.
     */
    public void setActive(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>cinema.movies.active</code>.
     */
    public Integer getActive() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>cinema.movies.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>cinema.movies.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>cinema.movies.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>cinema.movies.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, byte[], String, Integer, String, LocalDateTime, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, byte[], String, Integer, String, LocalDateTime, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Movies.MOVIES.ID;
    }

    @Override
    public Field<byte[]> field2() {
        return Movies.MOVIES.UUID;
    }

    @Override
    public Field<String> field3() {
        return Movies.MOVIES.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return Movies.MOVIES.DURATION;
    }

    @Override
    public Field<String> field5() {
        return Movies.MOVIES.AUTHOR;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Movies.MOVIES.RELEASE_DATE;
    }

    @Override
    public Field<Integer> field7() {
        return Movies.MOVIES.ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Movies.MOVIES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Movies.MOVIES.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public byte[] component2() {
        return getUuid();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getDuration();
    }

    @Override
    public String component5() {
        return getAuthor();
    }

    @Override
    public LocalDateTime component6() {
        return getReleaseDate();
    }

    @Override
    public Integer component7() {
        return getActive();
    }

    @Override
    public LocalDateTime component8() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component9() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public byte[] value2() {
        return getUuid();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getDuration();
    }

    @Override
    public String value5() {
        return getAuthor();
    }

    @Override
    public LocalDateTime value6() {
        return getReleaseDate();
    }

    @Override
    public Integer value7() {
        return getActive();
    }

    @Override
    public LocalDateTime value8() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value9() {
        return getUpdatedAt();
    }

    @Override
    public MoviesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MoviesRecord value2(byte[] value) {
        setUuid(value);
        return this;
    }

    @Override
    public MoviesRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public MoviesRecord value4(Integer value) {
        setDuration(value);
        return this;
    }

    @Override
    public MoviesRecord value5(String value) {
        setAuthor(value);
        return this;
    }

    @Override
    public MoviesRecord value6(LocalDateTime value) {
        setReleaseDate(value);
        return this;
    }

    @Override
    public MoviesRecord value7(Integer value) {
        setActive(value);
        return this;
    }

    @Override
    public MoviesRecord value8(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public MoviesRecord value9(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public MoviesRecord values(Long value1, byte[] value2, String value3, Integer value4, String value5, LocalDateTime value6, Integer value7, LocalDateTime value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MoviesRecord
     */
    public MoviesRecord() {
        super(Movies.MOVIES);
    }

    /**
     * Create a detached, initialised MoviesRecord
     */
    public MoviesRecord(Long id, byte[] uuid, String name, Integer duration, String author, LocalDateTime releaseDate, Integer active, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Movies.MOVIES);

        setId(id);
        setUuid(uuid);
        setName(name);
        setDuration(duration);
        setAuthor(author);
        setReleaseDate(releaseDate);
        setActive(active);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
