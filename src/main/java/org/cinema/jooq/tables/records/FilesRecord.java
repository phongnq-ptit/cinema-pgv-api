/*
 * This file is generated by jOOQ.
 */
package org.cinema.jooq.tables.records;


import java.time.LocalDateTime;

import org.cinema.jooq.tables.Files;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FilesRecord extends UpdatableRecordImpl<FilesRecord> implements Record8<Long, byte[], String, String, Integer, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>cinema.files.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cinema.files.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cinema.files.uuid</code>.
     */
    public void setUuid(byte[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>cinema.files.uuid</code>.
     */
    public byte[] getUuid() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>cinema.files.file_name</code>.
     */
    public void setFileName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cinema.files.file_name</code>.
     */
    public String getFileName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cinema.files.url</code>.
     */
    public void setUrl(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>cinema.files.url</code>.
     */
    public String getUrl() {
        return (String) get(3);
    }

    /**
     * Setter for <code>cinema.files.size</code>.
     */
    public void setSize(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>cinema.files.size</code>.
     */
    public Integer getSize() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>cinema.files.type</code>.
     */
    public void setType(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>cinema.files.type</code>.
     */
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>cinema.files.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>cinema.files.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>cinema.files.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>cinema.files.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, byte[], String, String, Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, byte[], String, String, Integer, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Files.FILES.ID;
    }

    @Override
    public Field<byte[]> field2() {
        return Files.FILES.UUID;
    }

    @Override
    public Field<String> field3() {
        return Files.FILES.FILE_NAME;
    }

    @Override
    public Field<String> field4() {
        return Files.FILES.URL;
    }

    @Override
    public Field<Integer> field5() {
        return Files.FILES.SIZE;
    }

    @Override
    public Field<String> field6() {
        return Files.FILES.TYPE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Files.FILES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Files.FILES.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public byte[] component2() {
        return getUuid();
    }

    @Override
    public String component3() {
        return getFileName();
    }

    @Override
    public String component4() {
        return getUrl();
    }

    @Override
    public Integer component5() {
        return getSize();
    }

    @Override
    public String component6() {
        return getType();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public byte[] value2() {
        return getUuid();
    }

    @Override
    public String value3() {
        return getFileName();
    }

    @Override
    public String value4() {
        return getUrl();
    }

    @Override
    public Integer value5() {
        return getSize();
    }

    @Override
    public String value6() {
        return getType();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public FilesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public FilesRecord value2(byte[] value) {
        setUuid(value);
        return this;
    }

    @Override
    public FilesRecord value3(String value) {
        setFileName(value);
        return this;
    }

    @Override
    public FilesRecord value4(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public FilesRecord value5(Integer value) {
        setSize(value);
        return this;
    }

    @Override
    public FilesRecord value6(String value) {
        setType(value);
        return this;
    }

    @Override
    public FilesRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public FilesRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public FilesRecord values(Long value1, byte[] value2, String value3, String value4, Integer value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FilesRecord
     */
    public FilesRecord() {
        super(Files.FILES);
    }

    /**
     * Create a detached, initialised FilesRecord
     */
    public FilesRecord(Long id, byte[] uuid, String fileName, String url, Integer size, String type, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Files.FILES);

        setId(id);
        setUuid(uuid);
        setFileName(fileName);
        setUrl(url);
        setSize(size);
        setType(type);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
    }
}
