/*
 * This file is generated by jOOQ.
 */
package org.cinema.jooq.tables.records;


import java.time.LocalDateTime;

import org.cinema.jooq.tables.Purchases;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PurchasesRecord extends UpdatableRecordImpl<PurchasesRecord> implements Record8<Long, byte[], byte[], byte[], Integer, LocalDateTime, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>cinema.purchases.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cinema.purchases.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cinema.purchases.uuid</code>.
     */
    public void setUuid(byte[] value) {
        set(1, value);
    }

    /**
     * Getter for <code>cinema.purchases.uuid</code>.
     */
    public byte[] getUuid() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>cinema.purchases.user_uuid</code>.
     */
    public void setUserUuid(byte[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>cinema.purchases.user_uuid</code>.
     */
    public byte[] getUserUuid() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>cinema.purchases.movie_public_uuid</code>.
     */
    public void setMoviePublicUuid(byte[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>cinema.purchases.movie_public_uuid</code>.
     */
    public byte[] getMoviePublicUuid() {
        return (byte[]) get(3);
    }

    /**
     * Setter for <code>cinema.purchases.quantity_of_tickets</code>.
     */
    public void setQuantityOfTickets(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>cinema.purchases.quantity_of_tickets</code>.
     */
    public Integer getQuantityOfTickets() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>cinema.purchases.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>cinema.purchases.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>cinema.purchases.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>cinema.purchases.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>cinema.purchases.downloads</code>.
     */
    public void setDownloads(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>cinema.purchases.downloads</code>.
     */
    public Integer getDownloads() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, byte[], byte[], byte[], Integer, LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, byte[], byte[], byte[], Integer, LocalDateTime, LocalDateTime, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Purchases.PURCHASES.ID;
    }

    @Override
    public Field<byte[]> field2() {
        return Purchases.PURCHASES.UUID;
    }

    @Override
    public Field<byte[]> field3() {
        return Purchases.PURCHASES.USER_UUID;
    }

    @Override
    public Field<byte[]> field4() {
        return Purchases.PURCHASES.MOVIE_PUBLIC_UUID;
    }

    @Override
    public Field<Integer> field5() {
        return Purchases.PURCHASES.QUANTITY_OF_TICKETS;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Purchases.PURCHASES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Purchases.PURCHASES.UPDATED_AT;
    }

    @Override
    public Field<Integer> field8() {
        return Purchases.PURCHASES.DOWNLOADS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public byte[] component2() {
        return getUuid();
    }

    @Override
    public byte[] component3() {
        return getUserUuid();
    }

    @Override
    public byte[] component4() {
        return getMoviePublicUuid();
    }

    @Override
    public Integer component5() {
        return getQuantityOfTickets();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdatedAt();
    }

    @Override
    public Integer component8() {
        return getDownloads();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public byte[] value2() {
        return getUuid();
    }

    @Override
    public byte[] value3() {
        return getUserUuid();
    }

    @Override
    public byte[] value4() {
        return getMoviePublicUuid();
    }

    @Override
    public Integer value5() {
        return getQuantityOfTickets();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdatedAt();
    }

    @Override
    public Integer value8() {
        return getDownloads();
    }

    @Override
    public PurchasesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PurchasesRecord value2(byte[] value) {
        setUuid(value);
        return this;
    }

    @Override
    public PurchasesRecord value3(byte[] value) {
        setUserUuid(value);
        return this;
    }

    @Override
    public PurchasesRecord value4(byte[] value) {
        setMoviePublicUuid(value);
        return this;
    }

    @Override
    public PurchasesRecord value5(Integer value) {
        setQuantityOfTickets(value);
        return this;
    }

    @Override
    public PurchasesRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PurchasesRecord value7(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public PurchasesRecord value8(Integer value) {
        setDownloads(value);
        return this;
    }

    @Override
    public PurchasesRecord values(Long value1, byte[] value2, byte[] value3, byte[] value4, Integer value5, LocalDateTime value6, LocalDateTime value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PurchasesRecord
     */
    public PurchasesRecord() {
        super(Purchases.PURCHASES);
    }

    /**
     * Create a detached, initialised PurchasesRecord
     */
    public PurchasesRecord(Long id, byte[] uuid, byte[] userUuid, byte[] moviePublicUuid, Integer quantityOfTickets, LocalDateTime createdAt, LocalDateTime updatedAt, Integer downloads) {
        super(Purchases.PURCHASES);

        setId(id);
        setUuid(uuid);
        setUserUuid(userUuid);
        setMoviePublicUuid(moviePublicUuid);
        setQuantityOfTickets(quantityOfTickets);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setDownloads(downloads);
    }
}
